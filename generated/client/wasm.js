
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  age: 'age',
  height: 'height',
  birthday: 'birthday',
  gender: 'gender',
  isActive: 'isActive',
  onboardingCompleted: 'onboardingCompleted',
  privacyLevel: 'privacyLevel',
  timezone: 'timezone'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountId: 'accountId',
  providerId: 'providerId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  idToken: 'idToken',
  passwordHash: 'passwordHash',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  verificationType: 'verificationType'
};

exports.Prisma.ColorPreferenceScalarFieldEnum = {
  id: 'id',
  colorName: 'colorName',
  hexCode: 'hexCode',
  shortDescription: 'shortDescription',
  createdAt: 'createdAt',
  isActive: 'isActive'
};

exports.Prisma.BodyTypeScalarFieldEnum = {
  id: 'id',
  gender: 'gender',
  typeName: 'typeName',
  description: 'description',
  createdAt: 'createdAt',
  isActive: 'isActive'
};

exports.Prisma.FashionStyleScalarFieldEnum = {
  id: 'id',
  styleName: 'styleName',
  description: 'description',
  socialRanking: 'socialRanking',
  trendScore: 'trendScore',
  ageGroup: 'ageGroup',
  formalityLevel: 'formalityLevel',
  createdAt: 'createdAt',
  isActive: 'isActive'
};

exports.Prisma.OutfitCategoryScalarFieldEnum = {
  id: 'id',
  categoryName: 'categoryName',
  description: 'description',
  displayOrder: 'displayOrder'
};

exports.Prisma.OutfitElementsScalarFieldEnum = {
  id: 'id',
  gender: 'gender',
  categoryId: 'categoryId',
  elementName: 'elementName',
  brandName: 'brandName',
  priceRange: 'priceRange',
  materialType: 'materialType',
  careInstructions: 'careInstructions',
  seasonSuitability: 'seasonSuitability',
  formalityLevel: 'formalityLevel',
  createdAt: 'createdAt',
  isActive: 'isActive'
};

exports.Prisma.WeatherTypeScalarFieldEnum = {
  id: 'id',
  weatherName: 'weatherName',
  description: 'description'
};

exports.Prisma.UserPreferenceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  favoriteColors: 'favoriteColors',
  bodyTypeId: 'bodyTypeId',
  favoriteStyles: 'favoriteStyles',
  budgetRange: 'budgetRange',
  preferredBrands: 'preferredBrands',
  styleConfidenceLevel: 'styleConfidenceLevel',
  preferredWeatherTypes: 'preferredWeatherTypes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserFavouriteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  outfitElementsId: 'outfitElementsId',
  selectionReason: 'selectionReason',
  occasion: 'occasion',
  weatherConditionId: 'weatherConditionId',
  userRating: 'userRating',
  feedbackNotes: 'feedbackNotes',
  selectedAt: 'selectedAt'
};

exports.Prisma.OutfitInDigitalClosetScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  image_url: 'image_url',
  image_publicId: 'image_publicId',
  categories: 'categories',
  colors: 'colors',
  fashionStyles: 'fashionStyles',
  size: 'size',
  weatherConds: 'weatherConds',
  brand: 'brand',
  isFavorite: 'isFavorite',
  addedAt: 'addedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Gender = exports.$Enums.Gender = {
  male: 'male',
  female: 'female',
  unisex: 'unisex',
  prefer_not_to_say: 'prefer_not_to_say'
};

exports.PrivacyLevel = exports.$Enums.PrivacyLevel = {
  minimal: 'minimal',
  standard: 'standard',
  enhanced: 'enhanced'
};

exports.PriceRange = exports.$Enums.PriceRange = {
  budget: 'budget',
  mid_range: 'mid_range',
  luxury: 'luxury'
};

exports.FormalityLevel = exports.$Enums.FormalityLevel = {
  casual: 'casual',
  semi_formal: 'semi_formal',
  formal: 'formal',
  very_formal: 'very_formal',
  ultra_formal: 'ultra_formal'
};

exports.BudgetRange = exports.$Enums.BudgetRange = {
  low: 'low',
  medium: 'medium',
  high: 'high'
};

exports.SelectionReason = exports.$Enums.SelectionReason = {
  liked: 'liked',
  disliked: 'disliked',
  neutral: 'neutral',
  purchased: 'purchased'
};

exports.AgeGroup = exports.$Enums.AgeGroup = {
  teen: 'teen',
  young_adult: 'young_adult',
  adult: 'adult',
  mature: 'mature'
};

exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Verification: 'Verification',
  ColorPreference: 'ColorPreference',
  BodyType: 'BodyType',
  FashionStyle: 'FashionStyle',
  OutfitCategory: 'OutfitCategory',
  OutfitElements: 'OutfitElements',
  WeatherType: 'WeatherType',
  UserPreference: 'UserPreference',
  UserFavourite: 'UserFavourite',
  OutfitInDigitalCloset: 'OutfitInDigitalCloset'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/khantnaythwayzaw/Documents/One-project-One-month/Outfique-backend/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/khantnaythwayzaw/Documents/One-project-One-month/Outfique-backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma Schema for Fashion Recommendation System\n// Author: Swan Htet Aung Phyo\n// Updated for Prisma 5+ by ChatGPT (GPT-5)\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// =====================================================\n// ENUM DEFINITIONS\n// =====================================================\n\nenum Gender {\n  male\n  female\n  unisex\n  prefer_not_to_say\n}\n\nenum PrivacyLevel {\n  minimal\n  standard\n  enhanced\n}\n\nenum PriceRange {\n  budget\n  mid_range\n  luxury\n}\n\nenum FormalityLevel {\n  casual\n  semi_formal\n  formal\n  very_formal\n  ultra_formal\n}\n\nenum BudgetRange {\n  low\n  medium\n  high\n}\n\nenum SelectionReason {\n  liked\n  disliked\n  neutral\n  purchased\n}\n\nenum AgeGroup {\n  teen\n  young_adult\n  adult\n  mature\n}\n\n// =====================================================\n// AUTHENTICATION & USER MANAGEMENT TABLES (BetterAuth)\n// =====================================================\n\nmodel User {\n  id                  String       @id @default(uuid())\n  name                String\n  email               String       @unique\n  emailVerified       Boolean      @default(false)\n  image               String?\n  createdAt           DateTime     @default(now())\n  updatedAt           DateTime     @default(now())\n  age                 Int?\n  height              Int?\n  birthday            DateTime\n  gender              Gender       @default(prefer_not_to_say)\n  isActive            Boolean      @default(true)\n  onboardingCompleted Boolean      @default(false)\n  privacyLevel        PrivacyLevel @default(standard)\n  timezone            String       @default(\"UTC\")\n\n  // Relations\n  accounts    Account[]\n  preferences UserPreference?\n  favourites  UserFavourite[]\n  // digitalClosets OutfitInDigitalCloset[]\n\n  @@index([email])\n  @@index([isActive])\n}\n\nmodel Account {\n  id                    String    @id @default(uuid())\n  userId                String\n  accountId             String\n  providerId            String\n  accessToken           String?\n  refreshToken          String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  idToken               String?\n  passwordHash          String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @default(now())\n\n  // Relations\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel Verification {\n  id               String   @id @default(uuid())\n  identifier       String\n  value            String\n  expiresAt        DateTime\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @default(now())\n  verificationType String   @default(\"email\")\n}\n\n// =====================================================\n// FASHION DOMAIN REFERENCE TABLES\n// =====================================================\n\nmodel ColorPreference {\n  id               Int      @id @default(autoincrement())\n  colorName        String   @unique\n  hexCode          String?\n  shortDescription String?\n  createdAt        DateTime @default(now())\n  isActive         Boolean  @default(true)\n}\n\nmodel BodyType {\n  id             Int              @id @default(autoincrement())\n  gender         Gender           @default(unisex)\n  typeName       String\n  description    String\n  createdAt      DateTime         @default(now())\n  isActive       Boolean          @default(true)\n  UserPreference UserPreference[]\n\n  @@unique([gender, typeName])\n}\n\nmodel FashionStyle {\n  id             Int       @id @default(autoincrement())\n  styleName      String    @unique\n  description    String\n  socialRanking  Int       @default(0)\n  trendScore     Decimal   @default(0.0)\n  ageGroup       AgeGroup?\n  formalityLevel Int\n  createdAt      DateTime  @default(now())\n  isActive       Boolean   @default(true)\n}\n\nmodel OutfitCategory {\n  id           Int              @id @default(autoincrement())\n  categoryName String           @unique\n  description  String?\n  displayOrder Int              @default(0)\n  elements     OutfitElements[]\n}\n\nmodel OutfitElements {\n  id                Int         @id @default(autoincrement())\n  gender            Gender      @default(unisex)\n  categoryId        Int\n  elementName       String\n  brandName         String?\n  priceRange        PriceRange?\n  materialType      String?\n  careInstructions  String?\n  seasonSuitability String[]\n  formalityLevel    Int\n  createdAt         DateTime    @default(now())\n  isActive          Boolean     @default(true)\n\n  // Relations\n  category   OutfitCategory  @relation(fields: [categoryId], references: [id])\n  favourites UserFavourite[]\n\n  @@unique([gender, categoryId, elementName])\n}\n\nmodel WeatherType {\n  id          Int    @id @default(autoincrement())\n  weatherName String @unique\n  description String\n\n  UserFavourite UserFavourite[]\n}\n\n// =====================================================\n// USER PREFERENCE & INTERACTION TABLES\n// =====================================================\n\nmodel UserPreference {\n  id                    Int         @id @default(autoincrement())\n  userId                String      @unique\n  favoriteColors        Int[]\n  bodyTypeId            Int?\n  favoriteStyles        Int[]\n  budgetRange           BudgetRange @default(medium)\n  preferredBrands       String[]\n  styleConfidenceLevel  Int?\n  preferredWeatherTypes Int[]\n  createdAt             DateTime    @default(now())\n  updatedAt             DateTime    @default(now())\n\n  // Relations\n  user     User      @relation(fields: [userId], references: [id])\n  bodyType BodyType? @relation(fields: [bodyTypeId], references: [id])\n}\n\nmodel UserFavourite {\n  id                 Int              @id @default(autoincrement())\n  userId             String\n  outfitElementsId   Int\n  selectionReason    SelectionReason?\n  occasion           String?\n  weatherConditionId Int?\n  userRating         Int?\n  feedbackNotes      String?\n  selectedAt         DateTime         @default(now())\n\n  // Relations\n  user             User           @relation(fields: [userId], references: [id])\n  outfitElement    OutfitElements @relation(fields: [outfitElementsId], references: [id])\n  weatherCondition WeatherType?   @relation(fields: [weatherConditionId], references: [id])\n\n  @@unique([userId, outfitElementsId, selectedAt])\n}\n\nmodel OutfitInDigitalCloset {\n  id             String   @id @default(uuid())\n  userId         String\n  image_url      String\n  image_publicId String\n  categories     String[]\n  colors         String[]\n  fashionStyles  String[]\n  size           String\n  weatherConds   String[]\n  brand          String[]\n  isFavorite     Boolean  @default(false)\n  addedAt        DateTime @default(now())\n  // Relations\n  // user           User           @relation(fields: [userId], references: [id])\n}\n",
  "inlineSchemaHash": "ab851cb223391fd03f1ae666bd18352d8f31715556094323c9d39e0ede48cb71",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"birthday\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"onboardingCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"privacyLevel\",\"kind\":\"enum\",\"type\":\"PrivacyLevel\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"preferences\",\"kind\":\"object\",\"type\":\"UserPreference\",\"relationName\":\"UserToUserPreference\"},{\"name\":\"favourites\",\"kind\":\"object\",\"type\":\"UserFavourite\",\"relationName\":\"UserToUserFavourite\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verificationType\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ColorPreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"colorName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hexCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shortDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"BodyType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"typeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"UserPreference\",\"kind\":\"object\",\"type\":\"UserPreference\",\"relationName\":\"BodyTypeToUserPreference\"}],\"dbName\":null},\"FashionStyle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"styleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socialRanking\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trendScore\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ageGroup\",\"kind\":\"enum\",\"type\":\"AgeGroup\"},{\"name\":\"formalityLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"OutfitCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"elements\",\"kind\":\"object\",\"type\":\"OutfitElements\",\"relationName\":\"OutfitCategoryToOutfitElements\"}],\"dbName\":null},\"OutfitElements\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"elementName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brandName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceRange\",\"kind\":\"enum\",\"type\":\"PriceRange\"},{\"name\":\"materialType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careInstructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seasonSuitability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formalityLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"OutfitCategory\",\"relationName\":\"OutfitCategoryToOutfitElements\"},{\"name\":\"favourites\",\"kind\":\"object\",\"type\":\"UserFavourite\",\"relationName\":\"OutfitElementsToUserFavourite\"}],\"dbName\":null},\"WeatherType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weatherName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserFavourite\",\"kind\":\"object\",\"type\":\"UserFavourite\",\"relationName\":\"UserFavouriteToWeatherType\"}],\"dbName\":null},\"UserPreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"favoriteColors\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bodyTypeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"favoriteStyles\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"budgetRange\",\"kind\":\"enum\",\"type\":\"BudgetRange\"},{\"name\":\"preferredBrands\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"styleConfidenceLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"preferredWeatherTypes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPreference\"},{\"name\":\"bodyType\",\"kind\":\"object\",\"type\":\"BodyType\",\"relationName\":\"BodyTypeToUserPreference\"}],\"dbName\":null},\"UserFavourite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"outfitElementsId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selectionReason\",\"kind\":\"enum\",\"type\":\"SelectionReason\"},{\"name\":\"occasion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weatherConditionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userRating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"feedbackNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"selectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserFavourite\"},{\"name\":\"outfitElement\",\"kind\":\"object\",\"type\":\"OutfitElements\",\"relationName\":\"OutfitElementsToUserFavourite\"},{\"name\":\"weatherCondition\",\"kind\":\"object\",\"type\":\"WeatherType\",\"relationName\":\"UserFavouriteToWeatherType\"}],\"dbName\":null},\"OutfitInDigitalCloset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image_publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colors\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fashionStyles\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weatherConds\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isFavorite\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

