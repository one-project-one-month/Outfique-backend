services:
  db:
    image: postgres:16-alpine
    restart: always
    container_name: outfique_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: outfique
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d outfique']
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      target: prod
    container_name: outfique_app
    command: sh -c "npx prisma migrate deploy && node dist/server.js"
    environment:
      - DATABASE_URL=postgresql://user:secret@db:5432/outfique
      - NODE_ENV=production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

  nginx-proxy-acme:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-acme
    restart: always
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
